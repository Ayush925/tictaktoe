clear()
showAxes()
showGrid()

var turn = true

//Cross
val X = Picture {
    setPenThickness(10)
    left(135)
    hop(71)
    right(180)
    forward(142)
    left(135)
    hop(100)
    left(135)
    forward(142)
}


// Zero
val O = Picture {
    setPenThickness(10)
    right(90)
    hop(50)
    left(90)
    left(360, 50)
}

//Lines
val line = Picture {
    setPenThickness(10)
    forward(450)
}

val line1 = trans(-75, -225) -> line.copy
val line2 = trans(75, -225) -> line.copy
val line3 = rot(90) * trans(-75, -225) -> line.copy
val line4 = rot(90) * trans(75, -225) -> line.copy
val lines = ArrayBuffer(line1, line2, line3, line4)
lines.foreach { z =>
    z.draw
}

// Blank Boxe
val box = penColor(blue) * fillColor(blue) -> Picture.rect(138, 138)
val box1 = trans(-219, 81) -> box.copy
val box2 = trans(-69, 81) -> box.copy
val box3 = trans(81, 81) -> box.copy
val box4 = trans(-219, -69) -> box.copy
val box5 = trans(-69, -69) -> box.copy
val box6 = trans(81, -69) -> box.copy
val box7 = trans(-219, -219) -> box.copy
val box8 = trans(-69, -219) -> box.copy
val box9 = trans(81, -219) -> box.copy

val boxes = ArrayBuffer(box1, box2, box3, box4, box5, box6, box7, box8, box9)

/////////////////
boxes.foreach { l =>
    def checkturn() {
        repeat(1) {
            if (turn == false) {
                draw(trans(l.position.x + 69, l.position.y + 69) -> O)
                turn = true
            }
            else if (turn == true) {
                draw(trans(l.position.x + 69, l.position.y + 69) -> X)
                turn = false
            }
        }
    }
    l.draw
    l.onMouseClick{ (x, y) =>
        checkturn()
    }
}
